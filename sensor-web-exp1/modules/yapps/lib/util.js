// Generated by LiveScript 1.4.0
(function(){
  var mkdirp, async, util, exports;
  mkdirp = require('mkdirp');
  async = require('async');
  util = {
    createDirectories: function(dirs, callback){
      var funcs, createCurrying, i$, len$;
      funcs = [];
      createCurrying = curry$(function(dir, cb){
        DBG("creating " + dir + " ...");
        return mkdirp(dir, function(err){
          return cb(err);
        });
      });
      for (i$ = 0, len$ = dirs.length; i$ < len$; ++i$) {
        (fn$.call(this, i$, dirs[i$]));
      }
      return async.series(funcs, function(err, results){
        return callback(err);
      });
      function fn$(i, dir){
        var c;
        c = createCurrying(dir);
        funcs.push(c);
      }
    },
    copyObject: function(dst, src, fields){
      var i$, len$;
      for (i$ = 0, len$ = fields.length; i$ < len$; ++i$) {
        (fn$.call(this, i$, fields[i$]));
      }
      return dst;
      function fn$(i, f){
        if (src[f] != null) {
          dst[f] = src[f];
        }
      }
    }
  };
  module.exports = exports = util;
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
