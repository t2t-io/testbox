// Generated by LiveScript 1.4.0
(function(){
  var yWeb, yWebapiStd, BaseApp, WebApp, exports;
  yWeb = require('y-web');
  yWebapiStd = require('y-webapi-std');
  BaseApp = require("./BaseApp");
  WebApp = (function(superclass){
    var prototype = extend$((import$(WebApp, superclass).displayName = 'WebApp', WebApp), superclass).prototype, constructor = WebApp;
    function WebApp(opts, helpers){
      this.opts = opts;
      this.helpers = helpers;
      WebApp.superclass.call(this, opts, helpers);
      this.addPlugin(require('y-web'));
      this.addPlugin(require('y-webapi-std'));
    }
    prototype.init = function(done){
      var self;
      self = this;
      return superclass.prototype.init.call(this, function(err){
        var web;
        if (err != null) {
          return done(err);
        }
        web = self.app.web;
        return web.start(done);
      });
    };
    return WebApp;
  }(BaseApp));
  module.exports = exports = WebApp;
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
